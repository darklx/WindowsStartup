public class StartupTool
    {
        public static string RegeditRunKey = @"SOFTWARE\Microsoft\Windows\CurrentVersion\Run";
        public static bool Regedit(string appName, string appFile, bool start = true)
        {
            if (start)
            {
                //添加启动注册表
                if (RegisterTool.Write(RegeditRunKey, appName, appFile))
                    return true;
            }
            else
            {
                //删除启动注册表
                if (RegisterTool.Delete(RegeditRunKey, appName))
                    return true;
            }
            return false;
        }
    }


 C#创建任务计划

因写的调用DiskPart程序是要用管理员身份运行的，这样每次开机检查都弹个框出来确认肯定不行。搜了下，似乎也只是使用任务计划程序运行来绕过UAC提升权限比较靠谱，网上的都是添加到计算机启动的，不是指定的用户登录到桌面后启动的，于是写了下面这段来自己添加到任务计划里启动：
复制代码

/// <summary>
/// create task
/// </summary>
/// 需先添加引用TaskScheduler
/// <param name="creator"></param>
/// <param name="taskName"></param>
/// <param name="path"></param>
/// <returns>state</returns>
public static _TASK_STATE CreateLogonTaskScheduler(string creator, string taskName, string path)
{
try
{
if (IsExists(taskName))
{
DeleteTask(taskName);
}

//实例化任务对象
TaskSchedulerClass scheduler = new TaskSchedulerClass();
scheduler.Connect(null, null, null, null);//连接
ITaskFolder folder = scheduler.GetFolder("\\");
//设置常规属性
ITaskDefinition task = scheduler.NewTask(0);
task.RegistrationInfo.Author = creator;//创建者
task.RegistrationInfo.Description = "描述信息";//描述
task.Principal.RunLevel = _TASK_RUNLEVEL.TASK_RUNLEVEL_HIGHEST; //使用最高权限运行
//设置触发器
ILogonTrigger tt = (ILogonTrigger)task.Triggers.Create(_TASK_TRIGGER_TYPE2.TASK_TRIGGER_LOGON); //触发器里的开始任务,其他开始任务方式用的是其他接口
tt.UserId = Environment.MachineName + "\\" + creator; //特定用户
//设置操作
IExecAction action = (IExecAction)task.Actions.Create(_TASK_ACTION_TYPE.TASK_ACTION_EXEC);
action.Path = path;
//其他设置
task.Settings.ExecutionTimeLimit = "PT0S";
task.Settings.DisallowStartIfOnBatteries = false;
task.Settings.RunOnlyIfIdle = false;

//注册任务
IRegisteredTask regTask = folder.RegisterTaskDefinition(
taskName, //计划任务名称
task,
(int)_TASK_CREATION.TASK_CREATE, //创建
null, //user
null, // password
_TASK_LOGON_TYPE.TASK_LOGON_INTERACTIVE_TOKEN, //Principal.LogonType
"");

IRunningTask runTask = regTask.Run(null);
return runTask.State;

}
catch (Exception ex)
{
throw ex;
}

}
复制代码

 

参考：

使用C#创建计划任务(How to create a Task Scheduler use C# )
http://www.cnblogs.com/tonge/p/4410066.html
Security Contexts for Tasks
https://msdn.microsoft.com/en-us/library/windows/desktop/aa382140(v=vs.85).aspx

------
